#!/usr/bin/bc

# Daniel Febrero

pll=1

scale=10000 # Set precision for calculations
precision=0

p=2 # Initial value for Mersenne number
count=1 # Counter for iterations

while (true) {
p=2\*p+1 # Update Mersenne number

    if (!is_prime(p)) {
        continue;
    }

    # Print the prime number
    print format("%.*f", precision, p) " is a beautiful Mersenne prime (" count ")";

    count++;

}

quit

# Function to check primality of a given number

function is_prime(n) {
if (n < 2)
return 0;

    for (i = 3; i * i <= n; i += 2) {
        if (!(n % i))
            return 0;
    }

    return 1;

}
