;; Copyright (c) 2012 Apple Inc.  All Rights reserved.
;;
;; profile for com.apple.mobileassetd on macOS
;;
;; WARNING: The sandbox rules in this file currently constitute
;; Apple System Private Interface and are subject to change at any time and
;; without notice.
;;

(version 1)
(deny default)
(import "system.sb")
(import "com.apple.corefoundation.sb")
(corefoundation)

;; READONLY Asset downloads
(allow file-read-metadata
    (subpath "/System/Library/Assets")
    (subpath "/System/Library/AssetsV2")
    (subpath "/AppleInternal/System/Library/AssetsV2")
    (subpath "/private/var/folders")
    (literal "/private/var/root")
)

;; WRITE Caches and TMP
(if (param "_CACHE_DIR")
       (allow file-write* file-read* (subpath (param "_CACHE_DIR"))))
(if (param "_TMP_DIR")
       (allow file-write* file-read* (subpath (param "_TMP_DIR"))))
(allow file-read* file-write*
   (mount-relative-regex #"^/\.TemporaryItems(/|$)"))

;; DENY WRITE user
(deny file-write-setugid)

;; DELETE assets
(allow file-write-unlink
    (subpath "/System/Library/Assets")
    (subpath "/System/Library/AssetsV2")
    (subpath "/AppleInternal/System/Library/AssetsV2")
    (subpath "/private/var/folders")
)

;; ISSUE Sandbox extensions
(allow file-issue-extension
    (require-all
        (extension-class "com.apple.assets.read") (subpath "/System/Library/AssetsV2")
    )
)


;; WRITE files
(allow file-read* file-write*
    (literal "/private/var/root")
    (subpath "/System/Library/Assets")
    (subpath "/System/Library/AssetsV2")
    (subpath "/AppleInternal/System/Library/AssetsV2")
    (subpath "/System/Library/PreinstalledAssets")
    (subpath "/System/Library/PreinstalledAssetsV2")
    (subpath "/private/var/MobileAsset/PreinstalledAssetsV2")
    (literal "/private/var/root/Library/Preferences/com.apple.MobileAsset.plist")
    (literal "/private/var/root/Library/Preferences/com.apple.cache_delete.plist")
    (literal "/dev/ptmx")
)

;; WRITE with report for /var/folders
(allow file-read*
    (subpath "/private/var/folders")
)
(allow (with report) file-write*
    (subpath "/private/var/folders")
)
(allow file-write*
    (regex #"^/private/var/folders/[^/]+/[^/]+/T/com\.apple\.mobileassetd($|/)")
    (regex #"^/private/var/folders/[^/]+/[^/]+/T/com\.apple\.nsurlsessiond($|/)")
)


;; READ/WRITE Security.framework
; mds: mds.lock, mdsDirectory.db, mdsObject.db
; 1. extension "security:mds"
;    uid == 0: r+w /private/var/db/mds/system
(allow file-read* file-write*
    (literal "/private/var/db/mds")
    (literal "/private/var/db/mds/system")
    (literal "/private/var/db/mds/system/mds.lock"))
; 2. /private/var/db/mds/system/{mdsDirectory.db,mdsObject.db}
;    uid == 0: r+w
(allow file-read* file-write*
    (literal "/private/var/db/mds/system/mdsDirectory.db")
    (literal "/private/var/db/mds/system/mdsObject.db"))
; 3. se_SecurityMessages:
;    uid  < 500: /private/var/db/mds/messages/se_SecurityMessages
(allow file-read*
    (subpath "/private/var/db/mds/messages/se_SecurityMessages"))
; The security framework uses systemkeychaincheck to ensure nothing
; accesses a keychain before the system keychain has been checked for validity.
(allow file-read-metadata
     (literal "/private/var/run/systemkeychaincheck.done"))
(allow network-outbound
    (literal "/private/var/run/systemkeychaincheck.socket"))


;; READ Caches / WRITE mobileassetd caches
(allow file-read*
    (literal "/Library/Caches")
    (literal "/private/var/root/Library/Caches")
)
(allow file-read* file-write*
    (subpath "/Library/Caches/mobileassetd")
    (subpath "/Library/Caches/com.apple.nsurlsessiond")
    (subpath "/private/var/root/Library/Caches/mobileassetd")
    (subpath "/private/var/root/Library/Caches/com.apple.nsurlsessiond")
)

;; READONLY System security configuration
(allow file-read*
    (subpath "/Library/Preferences/com.apple.security.plist")
)
(allow user-preference-read
    (literal "com.apple.security")
)


;; READONLY Root paths
(allow file-read-metadata
    (literal "/System")
    (literal "/System/Library")
    (literal "/private")
    (literal "/private/var")
    (literal "/private/var/db")
)

;; READ Update volume / WRITE MobileAsset under it
(allow file-read*
    (subpath "/System/Volumes/Update")
)
(allow file-write*
    (subpath "/System/Volumes/Update/MobileAsset")
)

;; ISSUE Sandbox extension
(allow file-issue-extension*
    (require-all
        (extension-class "com.apple.assets.read")           (subpath "/System/Library/AssetsV2") )
    (require-all
        (extension-class "com.apple.STExtractionService")   (subpath "/System/Library/AssetsV2") )  ;; Needed for access to source asset Data dirs for patching
        
    (require-all
        (extension-class "com.apple.StreamingUnzipService") (subpath "/private/var/folders/MobileAsset/AssetsV2/downloadDir") )
    (require-all
        (extension-class "com.apple.STExtractionService")   (subpath "/private/var/folders/MobileAsset/AssetsV2/downloadDir") )
        
    (require-all
        (extension-class "com.apple.assets.read")           (subpath "/System/Volumes/Update/MobileAsset/AssetsV2") )
        
    (require-all
        (extension-class "com.apple.StreamingUnzipService") (subpath "/System/Volumes/Update/MobileAsset/AssetsV2/downloadDir") )
    (require-all
        (extension-class "com.apple.STExtractionService")   (subpath "/System/Volumes/Update/MobileAsset/AssetsV2/downloadDir") )
)

;; READONLY for Network stack
(allow ipc-posix-shm-read-data
       (ipc-posix-name-regex #"^/tmp/com\.apple\.csseed\.[^/]+$")
       (ipc-posix-name "apple.shm.notification_center")
       (ipc-posix-name "FNetwork.defaultStorageSession")
       (ipc-posix-name "com.apple.AppleDatabaseChanged")
)

;; WRITE for Network stack
(allow ipc-posix-shm-write*
       (ipc-posix-name "com.apple.AppleDatabaseChanged")
)

;; READONLY
(allow file-read*
    (literal "/")
    (literal "/Library/Preferences/.GlobalPreferences.plist")
    (literal "/Library/Preferences/SystemConfiguration/preferences.plist")
    (literal "/usr/libexec")
    (literal "/usr/libexec/mobileassetd")
    (literal "/private/var/root/Library/Preferences/.GlobalPreferences.plist")
    (literal "/private/var/root/Library/Preferences/SystemConfiguration/preferences.plist")
    (literal "/private/var/db/mds/system/mdsObject.db")
    (literal "/private/var/db/mds/system/mdsDirectory.db")
    (subpath "/System/Volumes/iSCPreboot")
)


;; SERVICES Lookup
(allow mach-lookup
       (global-name "com.apple.CoreServices.coreservicesd")
       (global-name "com.apple.PowerManagement.control")
       (global-name "com.apple.SecurityServer")
       (global-name "com.apple.SystemConfiguration.SCNetworkReachability")
       (global-name "com.apple.SystemConfiguration.configd")
       (global-name "com.apple.cfnetwork.cfnetworkagent")
       (global-name "com.apple.distributed_notifications@1v3")
       (global-name "com.apple.networkd")
       (global-name "com.apple.ocspd")
       (global-name "com.apple.windowserver.active")
       (global-name "com.apple.coreservices.launchservicesd")
       (global-name "com.apple.DiskArbitration.diskarbitrationd")
       (global-name "com.apple.FontServer")
       (global-name "com.apple.FontObjectsServer")
       (global-name "com.apple.nsurlsessiond")
       (global-name "com.apple.nsurlstorage-cache")
       (global-name "com.apple.AssetCacheLocatorService")
       (global-name "com.apple.xpc.activity.control")
       (global-name "com.apple.lsd.mapdb")
       (global-name "com.apple.lsd.modifydb")
       (global-name "com.apple.CrashReporterSupportHelper")
       (global-name "com.apple.commcenter.coretelephony.xpc")
       (global-name "com.apple.softwareupdated")
       (global-name "com.apple.remoted")

       (global-name "com.apple.cookied")
       (global-name "com.apple.coreservices.quarantine-resolver")
       (global-name "com.apple.apsd")
       
       (global-name "com.apple.mobileassetd.push-notifications")

       (global-name "com.apple.mobileassetd.v2")
       (global-name "com.apple.installerauthagent")
)

;; IOKitUserClient
(allow iokit-open-user-client
       (iokit-user-client-class "AppleImage4UserClient")
       (iokit-user-client-class "BootPolicyUserClient")
)

;; READONLY File sysctl (originally from application.sb)
(allow system-fsctl
       (fsctl-command (_IO "h" 24)) ; HFS_VOLUME_STATUS / HFSIOC_VOLUME_STATUS
       (fsctl-command (_IO "h" 31)) ; HFS_GET_DOCUMENT_ID
       (fsctl-command (_IO "z" 12)) ; afpfsGetMountInfoFSCTL
       (fsctl-command (_IO "z" 19)) ; smbfsUniqueShareIDFSCTL
)

;; WRITE File sysctl (originally from application.sb)
(allow system-fsctl
       (fsctl-command (_IO "h" 30)) ; HFS_GET_WRITE_GEN_COUNTER
       (fsctl-command (_IO "h" 32)) ; HFS_TRANSFER_DOCUMENT_ID / HFSIOC_TRANSFER_DOCUMENT_ID
       (fsctl-command (_IO "z" 23)) ; afpfsByteRangeLock2FSCTL
)

;; READ/WRITE File APFS grafts
(allow system-fsctl
       (fsctl-command (_IO "J" 99))  ; APFSIOC_GRAFT_AN_FS
       (fsctl-command (_IO "J" 100)) ; APFSIOC_UNGRAFT_AN_FS
       (fsctl-command (_IO "J" 102)) ; APFSIOC_GET_GRAFT_INFO
       (fsctl-command (_IO "J" 68))  ; APFSIOC_MARK_PURGEABLE
)

;; SERVICES lookup
(allow mach-per-user-lookup)

;; DENY WRITE
;; log noise from Carbon / frameworks.
(deny file-write*
    (literal "/private/var/empty/Library")
    (with no-log)
)

;; READONLY Preferences
(allow user-preference-read
(preference-domain ".GlobalPreferences"))

;; WRITE SU Preferences
(allow user-preference-read user-preference-write
    (preference-domain "com.apple.SoftwareUpdate"))

;; NETWORK
;; Edge cache servers can use arbitrary ports
(system-network)
(allow network-outbound
       (literal "/private/var/run/mDNSResponder")
       (remote tcp "*:*")
)

